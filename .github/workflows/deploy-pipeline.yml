name: Deploy pipeline

on:
  push:
    branches: [ main ]
  
  workflow_run:
    workflows: 
      - "Python Code Quality Check"
      - "Run Pytest with Coverage Check"
    types:
      - completed

jobs:
  
  workflow-run-check:
    name: Check Workflow Run Event
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
    
    steps:
      - name: Check out code
        uses: actions/checkout@v2

  build:
    name: Build Image
    needs: workflow-run-check  
    runs-on: ubuntu-latest
    if: needs.workflow-run-check.result == 'success'
   
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push latest daily pipeline image to Amazon ECR
      run: |
        aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com
        docker build --platform linux/amd64 --provenance false -t judgment-reader-pipeline daily_pipeline/.
        docker tag judgment-reader-pipeline "${{ secrets.PIPELINE_ECR_URL }}:latest"
        docker push "${{ secrets.PIPELINE_ECR_URL }}:latest"